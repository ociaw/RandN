<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Library</OutputType>
    <TargetFrameworks>net8.0;net6.0;netcoreapp3.0;net48</TargetFrameworks>
    <RollForward>LatestMajor</RollForward>
    <Optimize>false</Optimize>
    <AssemblyName>Tests</AssemblyName>
    <RootNamespace>RandN</RootNamespace>
    <Nullable>disable</Nullable>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
    <LangVersion>12.0</LangVersion>
    <AnalysisLevel>8</AnalysisLevel>
    <!-- We intentionally target netcoreapp3.0 since it's the only way to test .NET Standard 2.1 without bringing in mono. -->
    <CheckEolTargetFramework>false</CheckEolTargetFramework>
  </PropertyGroup>

  <!-- If the globalization packages can't be found, tests break. To avoid this, we use invariant globalization for tests. -->
  <PropertyGroup>
    <InvariantGlobalization>true</InvariantGlobalization>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.3.3" />
    <PackageReference Include="xunit" Version="2.8.1" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="coverlet.collector" Version="6.0.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)'=='net48'">
    <PackageReference Include="Microsoft.VisualStudio.TestPlatform.ObjectModel" Version="14.0.0" />
    <PackageReference Include="System.Collections.Immutable" Version="8.0.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\RandN\RandN.csproj" />
    <ProjectReference Include="..\Mocks\Mocks.csproj" />
    <ProjectReference Include="..\ExtraRngs\ExtraRngs.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Update="Distributions\UniformFloatTests.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UniformFloatTests.cs</LastGenOutput>
    </None>
    <None Update="Distributions\UniformIntTests.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UniformIntTests.cs</LastGenOutput>
    </None>
    <None Update="Distributions\UnitInterval\FloatTests.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>FloatTests.cs</LastGenOutput>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Distributions\UniformFloatTests.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>UniformFloatTests.tt</DependentUpon>
    </Compile>
    <Compile Update="Distributions\UniformIntTests.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>UniformIntTests.tt</DependentUpon>
    </Compile>
    <Compile Update="Distributions\UnitInterval\FloatTests.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>FloatTests.tt</DependentUpon>
    </Compile>
  </ItemGroup>

  <!-- This seems to have something to do with T4 Templates. -->
  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>

</Project>
